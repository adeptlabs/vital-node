/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { FailureType } from "./FailureType";

export const MissingBiomarkerResult: core.serialization.ObjectSchema<
    serializers.MissingBiomarkerResult.Raw,
    Vital.MissingBiomarkerResult
> = core.serialization.object({
    name: core.serialization.string(),
    slug: core.serialization.string(),
    inferredFailureType: core.serialization.property("inferred_failure_type", FailureType),
    note: core.serialization.string().optional(),
    loinc: core.serialization.string().optional(),
    loincSlug: core.serialization.property("loinc_slug", core.serialization.string().optional()),
    providerId: core.serialization.property("provider_id", core.serialization.string().optional()),
});

export declare namespace MissingBiomarkerResult {
    interface Raw {
        name: string;
        slug: string;
        inferred_failure_type: FailureType.Raw;
        note?: string | null;
        loinc?: string | null;
        loinc_slug?: string | null;
        provider_id?: string | null;
    }
}
