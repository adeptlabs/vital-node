/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";
import { VitalCoreProvidersLabTestLabsSchemasResultsFhirCode } from "./VitalCoreProvidersLabTestLabsSchemasResultsFhirCode";
import { ObservationEffectiveDateTime } from "./ObservationEffectiveDateTime";
import { ObservationIssued } from "./ObservationIssued";
import { ValueQuantity } from "./ValueQuantity";
import { ValueRange } from "./ValueRange";
import { InterpretationItem } from "./InterpretationItem";
import { ReferenceRangeItem } from "./ReferenceRangeItem";

export const Observation: core.serialization.ObjectSchema<serializers.Observation.Raw, Vital.Observation> =
    core.serialization.object({
        resourceType: core.serialization.string(),
        status: core.serialization.string(),
        code: VitalCoreProvidersLabTestLabsSchemasResultsFhirCode,
        effectiveDateTime: ObservationEffectiveDateTime,
        issued: ObservationIssued,
        valueQuantity: ValueQuantity.optional(),
        valueRange: ValueRange.optional(),
        valueString: core.serialization.string().optional(),
        interpretation: core.serialization.list(InterpretationItem),
        referenceRange: core.serialization.list(ReferenceRangeItem),
    });

export declare namespace Observation {
    interface Raw {
        resourceType: string;
        status: string;
        code: VitalCoreProvidersLabTestLabsSchemasResultsFhirCode.Raw;
        effectiveDateTime: ObservationEffectiveDateTime.Raw;
        issued: ObservationIssued.Raw;
        valueQuantity?: ValueQuantity.Raw | null;
        valueRange?: ValueRange.Raw | null;
        valueString?: string | null;
        interpretation: InterpretationItem.Raw[];
        referenceRange: ReferenceRangeItem.Raw[];
    }
}
