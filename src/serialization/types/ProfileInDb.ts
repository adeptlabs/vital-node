/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";

export const ProfileInDb: core.serialization.ObjectSchema<serializers.ProfileInDb.Raw, Vital.ProfileInDb> =
    core.serialization.object({
        data: core.serialization.string().optional(),
        userId: core.serialization.property("user_id", core.serialization.string()),
        sourceId: core.serialization.property("source_id", core.serialization.number()),
        priorityId: core.serialization.property("priority_id", core.serialization.number().optional()),
        id: core.serialization.string(),
        source: core.serialization.lazyObject(async () => (await import("..")).ClientFacingProvider),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
    });

export declare namespace ProfileInDb {
    interface Raw {
        data?: string | null;
        user_id: string;
        source_id: number;
        priority_id?: number | null;
        id: string;
        source: serializers.ClientFacingProvider.Raw;
        updated_at?: string | null;
    }
}
