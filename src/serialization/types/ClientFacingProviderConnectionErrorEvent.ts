/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { ProviderConnectionError } from "./ProviderConnectionError";

export const ClientFacingProviderConnectionErrorEvent: core.serialization.ObjectSchema<
    serializers.ClientFacingProviderConnectionErrorEvent.Raw,
    Vital.ClientFacingProviderConnectionErrorEvent
> = core.serialization.object({
    eventType: core.serialization.property("event_type", core.serialization.stringLiteral("provider.connection.error")),
    userId: core.serialization.property("user_id", core.serialization.string()),
    clientUserId: core.serialization.property("client_user_id", core.serialization.string()),
    teamId: core.serialization.property("team_id", core.serialization.string()),
    data: ProviderConnectionError,
});

export declare namespace ClientFacingProviderConnectionErrorEvent {
    interface Raw {
        event_type: "provider.connection.error";
        user_id: string;
        client_user_id: string;
        team_id: string;
        data: ProviderConnectionError.Raw;
    }
}
