/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";

export const ClientFacingOrderDetails: core.serialization.Schema<
    serializers.ClientFacingOrderDetails.Raw,
    Vital.ClientFacingOrderDetails
> = core.serialization
    .union("type", {
        walk_in_test: core.serialization.lazyObject(async () => (await import("..")).ClientFacingWalkInOrderDetails),
        testkit: core.serialization.lazyObject(async () => (await import("..")).ClientFacingTestKitOrderDetails),
        at_home_phlebotomy: core.serialization.lazyObject(
            async () => (await import("..")).ClientFacingAtHomePhlebotomyOrderDetails
        ),
    })
    .transform<Vital.ClientFacingOrderDetails>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ClientFacingOrderDetails {
    type Raw =
        | ClientFacingOrderDetails.WalkInTest
        | ClientFacingOrderDetails.Testkit
        | ClientFacingOrderDetails.AtHomePhlebotomy;

    interface WalkInTest extends serializers.ClientFacingWalkInOrderDetails.Raw {
        type: "walk_in_test";
    }

    interface Testkit extends serializers.ClientFacingTestKitOrderDetails.Raw {
        type: "testkit";
    }

    interface AtHomePhlebotomy extends serializers.ClientFacingAtHomePhlebotomyOrderDetails.Raw {
        type: "at_home_phlebotomy";
    }
}
