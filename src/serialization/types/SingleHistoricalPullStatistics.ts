/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";

export const SingleHistoricalPullStatistics: core.serialization.ObjectSchema<
    serializers.SingleHistoricalPullStatistics.Raw,
    Vital.SingleHistoricalPullStatistics
> = core.serialization.object({
    status: core.serialization.lazy(async () => (await import("..")).HistoricalPullStatus),
    rangeStart: core.serialization.property("range_start", core.serialization.date().optional()),
    rangeEnd: core.serialization.property("range_end", core.serialization.date().optional()),
    daysWithData: core.serialization.property("days_with_data", core.serialization.number().optional()),
    release: core.serialization.string(),
    traceId: core.serialization.property("trace_id", core.serialization.string().optional()),
});

export declare namespace SingleHistoricalPullStatistics {
    interface Raw {
        status: serializers.HistoricalPullStatus.Raw;
        range_start?: string | null;
        range_end?: string | null;
        days_with_data?: number | null;
        release: string;
        trace_id?: string | null;
    }
}
