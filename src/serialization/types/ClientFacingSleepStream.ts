/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";

export const ClientFacingSleepStream: core.serialization.ObjectSchema<
    serializers.ClientFacingSleepStream.Raw,
    Vital.ClientFacingSleepStream
> = core.serialization.object({
    hrv: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).ClientFacingHrvTimeseries))
        .optional(),
    heartrate: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).ClientFacingHeartRateTimeseries))
        .optional(),
    hypnogram: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).ClientFacingHypnogramTimeseries))
        .optional(),
    respiratoryRate: core.serialization.property(
        "respiratory_rate",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).ClientFacingRespiratoryRateTimeseries))
            .optional()
    ),
});

export declare namespace ClientFacingSleepStream {
    interface Raw {
        hrv?: serializers.ClientFacingHrvTimeseries.Raw[] | null;
        heartrate?: serializers.ClientFacingHeartRateTimeseries.Raw[] | null;
        hypnogram?: serializers.ClientFacingHypnogramTimeseries.Raw[] | null;
        respiratory_rate?: serializers.ClientFacingRespiratoryRateTimeseries.Raw[] | null;
    }
}
