/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { ConnectedSourceClientFacing } from "./ConnectedSourceClientFacing";
import { FallbackTimeZone } from "./FallbackTimeZone";
import { FallbackBirthDate } from "./FallbackBirthDate";

export const ClientFacingUser: core.serialization.ObjectSchema<
    serializers.ClientFacingUser.Raw,
    Vital.ClientFacingUser
> = core.serialization.object({
    userId: core.serialization.property("user_id", core.serialization.string()),
    teamId: core.serialization.property("team_id", core.serialization.string()),
    clientUserId: core.serialization.property("client_user_id", core.serialization.string()),
    createdOn: core.serialization.property("created_on", core.serialization.string()),
    connectedSources: core.serialization.property(
        "connected_sources",
        core.serialization.list(ConnectedSourceClientFacing)
    ),
    fallbackTimeZone: core.serialization.property("fallback_time_zone", FallbackTimeZone.optional()),
    fallbackBirthDate: core.serialization.property("fallback_birth_date", FallbackBirthDate.optional()),
    ingestionStart: core.serialization.property("ingestion_start", core.serialization.string().optional()),
    ingestionEnd: core.serialization.property("ingestion_end", core.serialization.string().optional()),
});

export declare namespace ClientFacingUser {
    interface Raw {
        user_id: string;
        team_id: string;
        client_user_id: string;
        created_on: string;
        connected_sources: ConnectedSourceClientFacing.Raw[];
        fallback_time_zone?: FallbackTimeZone.Raw | null;
        fallback_birth_date?: FallbackBirthDate.Raw | null;
        ingestion_start?: string | null;
        ingestion_end?: string | null;
    }
}
