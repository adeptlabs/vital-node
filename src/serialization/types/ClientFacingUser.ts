/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";

export const ClientFacingUser: core.serialization.ObjectSchema<
    serializers.ClientFacingUser.Raw,
    Vital.ClientFacingUser
> = core.serialization.object({
    userId: core.serialization.property("user_id", core.serialization.string()),
    teamId: core.serialization.property("team_id", core.serialization.string()),
    clientUserId: core.serialization.property("client_user_id", core.serialization.string()),
    createdOn: core.serialization.property("created_on", core.serialization.date()),
    connectedSources: core.serialization.property(
        "connected_sources",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("..")).ConnectedSourceClientFacing)
        )
    ),
    fallbackTimeZone: core.serialization.property(
        "fallback_time_zone",
        core.serialization.lazyObject(async () => (await import("..")).FallbackTimeZone).optional()
    ),
});

export declare namespace ClientFacingUser {
    interface Raw {
        user_id: string;
        team_id: string;
        client_user_id: string;
        created_on: string;
        connected_sources: serializers.ConnectedSourceClientFacing.Raw[];
        fallback_time_zone?: serializers.FallbackTimeZone.Raw | null;
    }
}
