/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";

export const Source: core.serialization.ObjectSchema<serializers.Source.Raw, Vital.Source> = core.serialization.object({
    name: core.serialization.string(),
    slug: core.serialization.string(),
    description: core.serialization.string(),
    logo: core.serialization.string(),
    group: core.serialization.string().optional(),
    oauthUrl: core.serialization.property("oauth_url", core.serialization.string().optional()),
    authType: core.serialization.property(
        "auth_type",
        core.serialization.lazy(async () => (await import("..")).SourceAuthType).optional()
    ),
    sourceType: core.serialization.property(
        "source_type",
        core.serialization.lazy(async () => (await import("..")).SourceType).optional()
    ),
    isActive: core.serialization.property("is_active", core.serialization.boolean().optional()),
    backfillNumDays: core.serialization.property("backfill_num_days", core.serialization.number().optional()),
    id: core.serialization.number(),
});

export declare namespace Source {
    interface Raw {
        name: string;
        slug: string;
        description: string;
        logo: string;
        group?: string | null;
        oauth_url?: string | null;
        auth_type?: serializers.SourceAuthType.Raw | null;
        source_type?: serializers.SourceType.Raw | null;
        is_active?: boolean | null;
        backfill_num_days?: number | null;
        id: number;
    }
}
