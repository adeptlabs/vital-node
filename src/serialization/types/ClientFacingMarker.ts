/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";
import { MarkerType } from "./MarkerType";
import { AoE } from "./AoE";

export const ClientFacingMarker: core.serialization.ObjectSchema<
    serializers.ClientFacingMarker.Raw,
    Vital.ClientFacingMarker
> = core.serialization.object({
    id: core.serialization.number(),
    name: core.serialization.string(),
    slug: core.serialization.string(),
    description: core.serialization.string().optional(),
    labId: core.serialization.property("lab_id", core.serialization.number().optional()),
    providerId: core.serialization.property("provider_id", core.serialization.string().optional()),
    type: MarkerType.optional(),
    unit: core.serialization.string().optional(),
    price: core.serialization.string().optional(),
    aoe: AoE.optional(),
});

export declare namespace ClientFacingMarker {
    interface Raw {
        id: number;
        name: string;
        slug: string;
        description?: string | null;
        lab_id?: number | null;
        provider_id?: string | null;
        type?: MarkerType.Raw | null;
        unit?: string | null;
        price?: string | null;
        aoe?: AoE.Raw | null;
    }
}
