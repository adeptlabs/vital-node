/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";

export const ClientFacingStream: core.serialization.ObjectSchema<
    serializers.ClientFacingStream.Raw,
    Vital.ClientFacingStream
> = core.serialization.object({
    cadence: core.serialization.list(core.serialization.number()).optional(),
    time: core.serialization.list(core.serialization.number()).optional(),
    altitude: core.serialization.list(core.serialization.number()).optional(),
    velocitySmooth: core.serialization.property(
        "velocity_smooth",
        core.serialization.list(core.serialization.number()).optional()
    ),
    heartrate: core.serialization.list(core.serialization.number()).optional(),
    lat: core.serialization.list(core.serialization.number()).optional(),
    lng: core.serialization.list(core.serialization.number()).optional(),
    distance: core.serialization.list(core.serialization.number()).optional(),
    power: core.serialization.list(core.serialization.number()).optional(),
    resistance: core.serialization.list(core.serialization.number()).optional(),
});

export declare namespace ClientFacingStream {
    interface Raw {
        cadence?: number[] | null;
        time?: number[] | null;
        altitude?: number[] | null;
        velocity_smooth?: number[] | null;
        heartrate?: number[] | null;
        lat?: number[] | null;
        lng?: number[] | null;
        distance?: number[] | null;
        power?: number[] | null;
        resistance?: number[] | null;
    }
}
