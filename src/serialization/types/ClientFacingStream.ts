/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";
import { ClientFacingStreamCadence } from "./ClientFacingStreamCadence";
import { ClientFacingStreamAltitude } from "./ClientFacingStreamAltitude";
import { ClientFacingStreamVelocitySmooth } from "./ClientFacingStreamVelocitySmooth";
import { ClientFacingStreamHeartrate } from "./ClientFacingStreamHeartrate";
import { ClientFacingStreamLat } from "./ClientFacingStreamLat";
import { ClientFacingStreamLng } from "./ClientFacingStreamLng";
import { ClientFacingStreamDistance } from "./ClientFacingStreamDistance";
import { ClientFacingStreamPower } from "./ClientFacingStreamPower";
import { ClientFacingStreamResistance } from "./ClientFacingStreamResistance";
import { ClientFacingStreamTemperature } from "./ClientFacingStreamTemperature";

export const ClientFacingStream: core.serialization.ObjectSchema<
    serializers.ClientFacingStream.Raw,
    Vital.ClientFacingStream
> = core.serialization.object({
    cadence: ClientFacingStreamCadence.optional(),
    time: core.serialization.list(core.serialization.number()).optional(),
    altitude: ClientFacingStreamAltitude.optional(),
    velocitySmooth: core.serialization.property("velocity_smooth", ClientFacingStreamVelocitySmooth.optional()),
    heartrate: ClientFacingStreamHeartrate.optional(),
    lat: ClientFacingStreamLat.optional(),
    lng: ClientFacingStreamLng.optional(),
    distance: ClientFacingStreamDistance.optional(),
    power: ClientFacingStreamPower.optional(),
    resistance: ClientFacingStreamResistance.optional(),
    temperature: ClientFacingStreamTemperature.optional(),
});

export declare namespace ClientFacingStream {
    interface Raw {
        cadence?: ClientFacingStreamCadence.Raw | null;
        time?: number[] | null;
        altitude?: ClientFacingStreamAltitude.Raw | null;
        velocity_smooth?: ClientFacingStreamVelocitySmooth.Raw | null;
        heartrate?: ClientFacingStreamHeartrate.Raw | null;
        lat?: ClientFacingStreamLat.Raw | null;
        lng?: ClientFacingStreamLng.Raw | null;
        distance?: ClientFacingStreamDistance.Raw | null;
        power?: ClientFacingStreamPower.Raw | null;
        resistance?: ClientFacingStreamResistance.Raw | null;
        temperature?: ClientFacingStreamTemperature.Raw | null;
    }
}
