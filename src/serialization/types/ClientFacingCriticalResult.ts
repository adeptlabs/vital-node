/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";

export const ClientFacingCriticalResult: core.serialization.ObjectSchema<
    serializers.ClientFacingCriticalResult.Raw,
    Vital.ClientFacingCriticalResult
> = core.serialization.object({
    orderId: core.serialization.property("order_id", core.serialization.string()),
    sampleId: core.serialization.property("sample_id", core.serialization.string()),
    status: core.serialization.string(),
    interpretation: core.serialization.string(),
    teamId: core.serialization.property("team_id", core.serialization.string()),
    userId: core.serialization.property("user_id", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
});

export declare namespace ClientFacingCriticalResult {
    interface Raw {
        order_id: string;
        sample_id: string;
        status: string;
        interpretation: string;
        team_id: string;
        user_id: string;
        created_at: string;
        updated_at: string;
    }
}
