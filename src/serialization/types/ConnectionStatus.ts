/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";
import { ConnectionStatusState } from "./ConnectionStatusState";
import { ProviderMfaRequest } from "./ProviderMfaRequest";

export const ConnectionStatus: core.serialization.ObjectSchema<
    serializers.ConnectionStatus.Raw,
    Vital.ConnectionStatus
> = core.serialization.object({
    state: ConnectionStatusState,
    redirectUrl: core.serialization.property("redirect_url", core.serialization.string().optional()),
    errorType: core.serialization.property("error_type", core.serialization.string().optional()),
    error: core.serialization.string().optional(),
    providerMfa: core.serialization.property("provider_mfa", ProviderMfaRequest.optional()),
    success: core.serialization.boolean(),
});

export declare namespace ConnectionStatus {
    interface Raw {
        state: ConnectionStatusState.Raw;
        redirect_url?: string | null;
        error_type?: string | null;
        error?: string | null;
        provider_mfa?: ProviderMfaRequest.Raw | null;
        success: boolean;
    }
}
