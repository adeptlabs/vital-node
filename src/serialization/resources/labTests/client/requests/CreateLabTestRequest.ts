/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Vital from "../../../../../api";
import * as core from "../../../../../core";

export const CreateLabTestRequest: core.serialization.Schema<
    serializers.CreateLabTestRequest.Raw,
    Vital.CreateLabTestRequest
> = core.serialization.object({
    markerIds: core.serialization.property("marker_ids", core.serialization.list(core.serialization.number())),
    labId: core.serialization.property("lab_id", core.serialization.number()),
    name: core.serialization.string(),
    method: core.serialization.lazy(async () => (await import("../../../..")).LabTestCollectionMethod),
    sampleType: core.serialization.property(
        "sample_type",
        core.serialization.lazy(async () => (await import("../../../..")).LabTestSampleType)
    ),
    description: core.serialization.string(),
    fasting: core.serialization.boolean().optional(),
});

export declare namespace CreateLabTestRequest {
    interface Raw {
        marker_ids: number[];
        lab_id: number;
        name: string;
        method: serializers.LabTestCollectionMethod.Raw;
        sample_type: serializers.LabTestSampleType.Raw;
        description: string;
        fasting?: boolean | null;
    }
}
