/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Vital from "../../../../../api/index";
import * as core from "../../../../../core";
import { PatientDetails } from "../../../../types/PatientDetails";
import { PatientAddressCompatible } from "../../../../types/PatientAddressCompatible";
import { PhysicianCreateRequestBase } from "../../../../types/PhysicianCreateRequestBase";
import { HealthInsuranceCreateRequest } from "../../../../types/HealthInsuranceCreateRequest";
import { Consent } from "../../../../types/Consent";

export const RegisterTestkitRequest: core.serialization.Schema<
    serializers.RegisterTestkitRequest.Raw,
    Vital.RegisterTestkitRequest
> = core.serialization.object({
    userId: core.serialization.property("user_id", core.serialization.string().optional()),
    sampleId: core.serialization.property("sample_id", core.serialization.string()),
    patientDetails: core.serialization.property("patient_details", PatientDetails),
    patientAddress: core.serialization.property("patient_address", PatientAddressCompatible),
    physician: PhysicianCreateRequestBase.optional(),
    healthInsurance: core.serialization.property("health_insurance", HealthInsuranceCreateRequest.optional()),
    consents: core.serialization.list(Consent).optional(),
});

export declare namespace RegisterTestkitRequest {
    interface Raw {
        user_id?: string | null;
        sample_id: string;
        patient_details: PatientDetails.Raw;
        patient_address: PatientAddressCompatible.Raw;
        physician?: PhysicianCreateRequestBase.Raw | null;
        health_insurance?: HealthInsuranceCreateRequest.Raw | null;
        consents?: Consent.Raw[] | null;
    }
}
