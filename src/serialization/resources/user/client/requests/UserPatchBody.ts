/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Vital from "../../../../../api/index";
import * as core from "../../../../../core";

export const UserPatchBody: core.serialization.Schema<serializers.UserPatchBody.Raw, Vital.UserPatchBody> =
    core.serialization.object({
        fallbackTimeZone: core.serialization.property("fallback_time_zone", core.serialization.string().optional()),
        fallbackBirthDate: core.serialization.property("fallback_birth_date", core.serialization.string().optional()),
        ingestionStart: core.serialization.property("ingestion_start", core.serialization.string().optional()),
        ingestionEnd: core.serialization.property("ingestion_end", core.serialization.string().optional()),
        clientUserId: core.serialization.property("client_user_id", core.serialization.string().optional()),
    });

export declare namespace UserPatchBody {
    interface Raw {
        fallback_time_zone?: string | null;
        fallback_birth_date?: string | null;
        ingestion_start?: string | null;
        ingestion_end?: string | null;
        client_user_id?: string | null;
    }
}
