/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Vital from "../../../../../api/index";
import * as core from "../../../../../core";
import { ResponsibleRelationship } from "../../../../types/ResponsibleRelationship";
import { VitalCoreSchemasDbSchemasLabTestInsurancePersonDetails } from "../../../../types/VitalCoreSchemasDbSchemasLabTestInsurancePersonDetails";
import { GuarantorDetails } from "../../../../types/GuarantorDetails";

export const CreateInsuranceRequest: core.serialization.Schema<
    serializers.CreateInsuranceRequest.Raw,
    Vital.CreateInsuranceRequest
> = core.serialization.object({
    payorCode: core.serialization.property("payor_code", core.serialization.string()),
    memberId: core.serialization.property("member_id", core.serialization.string()),
    groupId: core.serialization.property("group_id", core.serialization.string().optional()),
    relationship: ResponsibleRelationship,
    insured: VitalCoreSchemasDbSchemasLabTestInsurancePersonDetails,
    guarantor: GuarantorDetails.optional(),
});

export declare namespace CreateInsuranceRequest {
    interface Raw {
        payor_code: string;
        member_id: string;
        group_id?: string | null;
        relationship: ResponsibleRelationship.Raw;
        insured: VitalCoreSchemasDbSchemasLabTestInsurancePersonDetails.Raw;
        guarantor?: GuarantorDetails.Raw | null;
    }
}
