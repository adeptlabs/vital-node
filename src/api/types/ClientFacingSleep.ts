/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vital from "..";

export interface ClientFacingSleep {
    /** User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api. */
    userId: string;
    id: string;
    /** Date of the specified record, formatted as ISO8601 datetime string in UTC 00:00. Deprecated in favour of calendar_date. */
    date: Date;
    /** Date of the sleep summary in the YYYY-mm-dd format. This generally matches the sleep end date. */
    calendarDate: string;
    /** UTC Time when the sleep period started */
    bedtimeStart: Date;
    /** UTC Time when the sleep period ended */
    bedtimeStop: Date;
    timezoneOffset?: number;
    /** Total duration of the sleep period (sleep.duration = sleep.bedtime_end - sleep.bedtime_start)::seconds */
    duration: number;
    /** Total amount of sleep registered during the sleep period (sleep.total = sleep.rem + sleep.light + sleep.deep)::seconds */
    total: number;
    /** Total amount of awake time registered during the sleep period::seconds */
    awake: number;
    /** Total amount of light sleep registered during the sleep period::seconds */
    light: number;
    /** Total amount of REM sleep registered during the sleep period, minutes::seconds */
    rem: number;
    /** Total amount of deep (N3) sleep registered during the sleep period::seconds */
    deep: number;
    score?: number;
    hrLowest?: number;
    hrAverage?: number;
    efficiency?: number;
    latency?: number;
    temperatureDelta?: number;
    skinTemperature?: number;
    hrDip?: number;
    state?: Vital.SleepSummaryState;
    averageHrv?: number;
    respiratoryRate?: number;
    /** Source the data has come from. */
    source: Vital.ClientFacingSource;
    sleepStream?: Vital.ClientFacingSleepStream;
}
